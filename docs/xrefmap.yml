### YamlMime:XRefMap
sorted: true
references:
- uid: Chiaki
  name: Chiaki
  href: api/Chiaki.html
  commentId: N:Chiaki
  fullName: Chiaki
  nameWithType: Chiaki
- uid: Chiaki.BinarySerializer
  name: BinarySerializer
  href: api/Chiaki.BinarySerializer.html
  commentId: T:Chiaki.BinarySerializer
  fullName: Chiaki.BinarySerializer
  nameWithType: BinarySerializer
- uid: Chiaki.BinarySerializer.Deserialize*
  name: Deserialize
  href: api/Chiaki.BinarySerializer.html#Chiaki_BinarySerializer_Deserialize_
  commentId: Overload:Chiaki.BinarySerializer.Deserialize
  isSpec: "True"
  fullName: Chiaki.BinarySerializer.Deserialize
  nameWithType: BinarySerializer.Deserialize
- uid: Chiaki.BinarySerializer.Deserialize``1(System.Byte[])
  name: Deserialize<T>(Byte[])
  href: api/Chiaki.BinarySerializer.html#Chiaki_BinarySerializer_Deserialize__1_System_Byte___
  commentId: M:Chiaki.BinarySerializer.Deserialize``1(System.Byte[])
  name.vb: Deserialize(Of T)(Byte())
  fullName: Chiaki.BinarySerializer.Deserialize<T>(System.Byte[])
  fullName.vb: Chiaki.BinarySerializer.Deserialize(Of T)(System.Byte())
  nameWithType: BinarySerializer.Deserialize<T>(Byte[])
  nameWithType.vb: BinarySerializer.Deserialize(Of T)(Byte())
- uid: Chiaki.BinarySerializer.Serialize*
  name: Serialize
  href: api/Chiaki.BinarySerializer.html#Chiaki_BinarySerializer_Serialize_
  commentId: Overload:Chiaki.BinarySerializer.Serialize
  isSpec: "True"
  fullName: Chiaki.BinarySerializer.Serialize
  nameWithType: BinarySerializer.Serialize
- uid: Chiaki.BinarySerializer.Serialize``1(``0)
  name: Serialize<T>(T)
  href: api/Chiaki.BinarySerializer.html#Chiaki_BinarySerializer_Serialize__1___0_
  commentId: M:Chiaki.BinarySerializer.Serialize``1(``0)
  name.vb: Serialize(Of T)(T)
  fullName: Chiaki.BinarySerializer.Serialize<T>(T)
  fullName.vb: Chiaki.BinarySerializer.Serialize(Of T)(T)
  nameWithType: BinarySerializer.Serialize<T>(T)
  nameWithType.vb: BinarySerializer.Serialize(Of T)(T)
- uid: Chiaki.DateTimeExtensions
  name: DateTimeExtensions
  href: api/Chiaki.DateTimeExtensions.html
  commentId: T:Chiaki.DateTimeExtensions
  fullName: Chiaki.DateTimeExtensions
  nameWithType: DateTimeExtensions
- uid: Chiaki.DateTimeExtensions.GetStartOfWeek(System.DateTime,System.DayOfWeek)
  name: GetStartOfWeek(DateTime, DayOfWeek)
  href: api/Chiaki.DateTimeExtensions.html#Chiaki_DateTimeExtensions_GetStartOfWeek_System_DateTime_System_DayOfWeek_
  commentId: M:Chiaki.DateTimeExtensions.GetStartOfWeek(System.DateTime,System.DayOfWeek)
  fullName: Chiaki.DateTimeExtensions.GetStartOfWeek(System.DateTime, System.DayOfWeek)
  nameWithType: DateTimeExtensions.GetStartOfWeek(DateTime, DayOfWeek)
- uid: Chiaki.DateTimeExtensions.GetStartOfWeek*
  name: GetStartOfWeek
  href: api/Chiaki.DateTimeExtensions.html#Chiaki_DateTimeExtensions_GetStartOfWeek_
  commentId: Overload:Chiaki.DateTimeExtensions.GetStartOfWeek
  isSpec: "True"
  fullName: Chiaki.DateTimeExtensions.GetStartOfWeek
  nameWithType: DateTimeExtensions.GetStartOfWeek
- uid: Chiaki.DateTimeExtensions.ToUnixTimestamp(System.DateTime)
  name: ToUnixTimestamp(DateTime)
  href: api/Chiaki.DateTimeExtensions.html#Chiaki_DateTimeExtensions_ToUnixTimestamp_System_DateTime_
  commentId: M:Chiaki.DateTimeExtensions.ToUnixTimestamp(System.DateTime)
  fullName: Chiaki.DateTimeExtensions.ToUnixTimestamp(System.DateTime)
  nameWithType: DateTimeExtensions.ToUnixTimestamp(DateTime)
- uid: Chiaki.DateTimeExtensions.ToUnixTimestamp*
  name: ToUnixTimestamp
  href: api/Chiaki.DateTimeExtensions.html#Chiaki_DateTimeExtensions_ToUnixTimestamp_
  commentId: Overload:Chiaki.DateTimeExtensions.ToUnixTimestamp
  isSpec: "True"
  fullName: Chiaki.DateTimeExtensions.ToUnixTimestamp
  nameWithType: DateTimeExtensions.ToUnixTimestamp
- uid: Chiaki.DictionaryExtensions
  name: DictionaryExtensions
  href: api/Chiaki.DictionaryExtensions.html
  commentId: T:Chiaki.DictionaryExtensions
  fullName: Chiaki.DictionaryExtensions
  nameWithType: DictionaryExtensions
- uid: Chiaki.DictionaryExtensions.ToNameValueCollection(System.Collections.Generic.IDictionary{System.String,System.String})
  name: ToNameValueCollection(IDictionary<String, String>)
  href: api/Chiaki.DictionaryExtensions.html#Chiaki_DictionaryExtensions_ToNameValueCollection_System_Collections_Generic_IDictionary_System_String_System_String__
  commentId: M:Chiaki.DictionaryExtensions.ToNameValueCollection(System.Collections.Generic.IDictionary{System.String,System.String})
  name.vb: ToNameValueCollection(IDictionary(Of String, String))
  fullName: Chiaki.DictionaryExtensions.ToNameValueCollection(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullName.vb: Chiaki.DictionaryExtensions.ToNameValueCollection(System.Collections.Generic.IDictionary(Of System.String, System.String))
  nameWithType: DictionaryExtensions.ToNameValueCollection(IDictionary<String, String>)
  nameWithType.vb: DictionaryExtensions.ToNameValueCollection(IDictionary(Of String, String))
- uid: Chiaki.DictionaryExtensions.ToNameValueCollection*
  name: ToNameValueCollection
  href: api/Chiaki.DictionaryExtensions.html#Chiaki_DictionaryExtensions_ToNameValueCollection_
  commentId: Overload:Chiaki.DictionaryExtensions.ToNameValueCollection
  isSpec: "True"
  fullName: Chiaki.DictionaryExtensions.ToNameValueCollection
  nameWithType: DictionaryExtensions.ToNameValueCollection
- uid: Chiaki.DoubleExtensions
  name: DoubleExtensions
  href: api/Chiaki.DoubleExtensions.html
  commentId: T:Chiaki.DoubleExtensions
  fullName: Chiaki.DoubleExtensions
  nameWithType: DoubleExtensions
- uid: Chiaki.DoubleExtensions.AsDateTimeFromUnixTimestamp(System.Double)
  name: AsDateTimeFromUnixTimestamp(Double)
  href: api/Chiaki.DoubleExtensions.html#Chiaki_DoubleExtensions_AsDateTimeFromUnixTimestamp_System_Double_
  commentId: M:Chiaki.DoubleExtensions.AsDateTimeFromUnixTimestamp(System.Double)
  fullName: Chiaki.DoubleExtensions.AsDateTimeFromUnixTimestamp(System.Double)
  nameWithType: DoubleExtensions.AsDateTimeFromUnixTimestamp(Double)
- uid: Chiaki.DoubleExtensions.AsDateTimeFromUnixTimestamp*
  name: AsDateTimeFromUnixTimestamp
  href: api/Chiaki.DoubleExtensions.html#Chiaki_DoubleExtensions_AsDateTimeFromUnixTimestamp_
  commentId: Overload:Chiaki.DoubleExtensions.AsDateTimeFromUnixTimestamp
  isSpec: "True"
  fullName: Chiaki.DoubleExtensions.AsDateTimeFromUnixTimestamp
  nameWithType: DoubleExtensions.AsDateTimeFromUnixTimestamp
- uid: Chiaki.Enum`1
  name: Enum<T>
  href: api/Chiaki.Enum-1.html
  commentId: T:Chiaki.Enum`1
  name.vb: Enum(Of T)
  fullName: Chiaki.Enum<T>
  fullName.vb: Chiaki.Enum(Of T)
  nameWithType: Enum<T>
  nameWithType.vb: Enum(Of T)
- uid: Chiaki.Enum`1.CastOrNull(System.Int32)
  name: CastOrNull(Int32)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_CastOrNull_System_Int32_
  commentId: M:Chiaki.Enum`1.CastOrNull(System.Int32)
  fullName: Chiaki.Enum<T>.CastOrNull(System.Int32)
  fullName.vb: Chiaki.Enum(Of T).CastOrNull(System.Int32)
  nameWithType: Enum<T>.CastOrNull(Int32)
  nameWithType.vb: Enum(Of T).CastOrNull(Int32)
- uid: Chiaki.Enum`1.CastOrNull*
  name: CastOrNull
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_CastOrNull_
  commentId: Overload:Chiaki.Enum`1.CastOrNull
  isSpec: "True"
  fullName: Chiaki.Enum<T>.CastOrNull
  fullName.vb: Chiaki.Enum(Of T).CastOrNull
  nameWithType: Enum<T>.CastOrNull
  nameWithType.vb: Enum(Of T).CastOrNull
- uid: Chiaki.Enum`1.GetFlags(`0)
  name: GetFlags(T)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_GetFlags__0_
  commentId: M:Chiaki.Enum`1.GetFlags(`0)
  fullName: Chiaki.Enum<T>.GetFlags(T)
  fullName.vb: Chiaki.Enum(Of T).GetFlags(T)
  nameWithType: Enum<T>.GetFlags(T)
  nameWithType.vb: Enum(Of T).GetFlags(T)
- uid: Chiaki.Enum`1.GetFlags*
  name: GetFlags
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_GetFlags_
  commentId: Overload:Chiaki.Enum`1.GetFlags
  isSpec: "True"
  fullName: Chiaki.Enum<T>.GetFlags
  fullName.vb: Chiaki.Enum(Of T).GetFlags
  nameWithType: Enum<T>.GetFlags
  nameWithType.vb: Enum(Of T).GetFlags
- uid: Chiaki.Enum`1.GetName(`0)
  name: GetName(T)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_GetName__0_
  commentId: M:Chiaki.Enum`1.GetName(`0)
  fullName: Chiaki.Enum<T>.GetName(T)
  fullName.vb: Chiaki.Enum(Of T).GetName(T)
  nameWithType: Enum<T>.GetName(T)
  nameWithType.vb: Enum(Of T).GetName(T)
- uid: Chiaki.Enum`1.GetName*
  name: GetName
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_GetName_
  commentId: Overload:Chiaki.Enum`1.GetName
  isSpec: "True"
  fullName: Chiaki.Enum<T>.GetName
  fullName.vb: Chiaki.Enum(Of T).GetName
  nameWithType: Enum<T>.GetName
  nameWithType.vb: Enum(Of T).GetName
- uid: Chiaki.Enum`1.GetNames
  name: GetNames()
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_GetNames
  commentId: M:Chiaki.Enum`1.GetNames
  fullName: Chiaki.Enum<T>.GetNames()
  fullName.vb: Chiaki.Enum(Of T).GetNames()
  nameWithType: Enum<T>.GetNames()
  nameWithType.vb: Enum(Of T).GetNames()
- uid: Chiaki.Enum`1.GetNames*
  name: GetNames
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_GetNames_
  commentId: Overload:Chiaki.Enum`1.GetNames
  isSpec: "True"
  fullName: Chiaki.Enum<T>.GetNames
  fullName.vb: Chiaki.Enum(Of T).GetNames
  nameWithType: Enum<T>.GetNames
  nameWithType.vb: Enum(Of T).GetNames
- uid: Chiaki.Enum`1.GetValues
  name: GetValues()
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_GetValues
  commentId: M:Chiaki.Enum`1.GetValues
  fullName: Chiaki.Enum<T>.GetValues()
  fullName.vb: Chiaki.Enum(Of T).GetValues()
  nameWithType: Enum<T>.GetValues()
  nameWithType.vb: Enum(Of T).GetValues()
- uid: Chiaki.Enum`1.GetValues*
  name: GetValues
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_GetValues_
  commentId: Overload:Chiaki.Enum`1.GetValues
  isSpec: "True"
  fullName: Chiaki.Enum<T>.GetValues
  fullName.vb: Chiaki.Enum(Of T).GetValues
  nameWithType: Enum<T>.GetValues
  nameWithType.vb: Enum(Of T).GetValues
- uid: Chiaki.Enum`1.IsDefined(`0)
  name: IsDefined(T)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_IsDefined__0_
  commentId: M:Chiaki.Enum`1.IsDefined(`0)
  fullName: Chiaki.Enum<T>.IsDefined(T)
  fullName.vb: Chiaki.Enum(Of T).IsDefined(T)
  nameWithType: Enum<T>.IsDefined(T)
  nameWithType.vb: Enum(Of T).IsDefined(T)
- uid: Chiaki.Enum`1.IsDefined(System.Int32)
  name: IsDefined(Int32)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_IsDefined_System_Int32_
  commentId: M:Chiaki.Enum`1.IsDefined(System.Int32)
  fullName: Chiaki.Enum<T>.IsDefined(System.Int32)
  fullName.vb: Chiaki.Enum(Of T).IsDefined(System.Int32)
  nameWithType: Enum<T>.IsDefined(Int32)
  nameWithType.vb: Enum(Of T).IsDefined(Int32)
- uid: Chiaki.Enum`1.IsDefined(System.String)
  name: IsDefined(String)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_IsDefined_System_String_
  commentId: M:Chiaki.Enum`1.IsDefined(System.String)
  fullName: Chiaki.Enum<T>.IsDefined(System.String)
  fullName.vb: Chiaki.Enum(Of T).IsDefined(System.String)
  nameWithType: Enum<T>.IsDefined(String)
  nameWithType.vb: Enum(Of T).IsDefined(String)
- uid: Chiaki.Enum`1.IsDefined*
  name: IsDefined
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_IsDefined_
  commentId: Overload:Chiaki.Enum`1.IsDefined
  isSpec: "True"
  fullName: Chiaki.Enum<T>.IsDefined
  fullName.vb: Chiaki.Enum(Of T).IsDefined
  nameWithType: Enum<T>.IsDefined
  nameWithType.vb: Enum(Of T).IsDefined
- uid: Chiaki.Enum`1.Parse(System.String)
  name: Parse(String)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_Parse_System_String_
  commentId: M:Chiaki.Enum`1.Parse(System.String)
  fullName: Chiaki.Enum<T>.Parse(System.String)
  fullName.vb: Chiaki.Enum(Of T).Parse(System.String)
  nameWithType: Enum<T>.Parse(String)
  nameWithType.vb: Enum(Of T).Parse(String)
- uid: Chiaki.Enum`1.Parse(System.String,System.Boolean)
  name: Parse(String, Boolean)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_Parse_System_String_System_Boolean_
  commentId: M:Chiaki.Enum`1.Parse(System.String,System.Boolean)
  fullName: Chiaki.Enum<T>.Parse(System.String, System.Boolean)
  fullName.vb: Chiaki.Enum(Of T).Parse(System.String, System.Boolean)
  nameWithType: Enum<T>.Parse(String, Boolean)
  nameWithType.vb: Enum(Of T).Parse(String, Boolean)
- uid: Chiaki.Enum`1.Parse*
  name: Parse
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_Parse_
  commentId: Overload:Chiaki.Enum`1.Parse
  isSpec: "True"
  fullName: Chiaki.Enum<T>.Parse
  fullName.vb: Chiaki.Enum(Of T).Parse
  nameWithType: Enum<T>.Parse
  nameWithType.vb: Enum(Of T).Parse
- uid: Chiaki.Enum`1.ParseOrNull(System.String)
  name: ParseOrNull(String)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_ParseOrNull_System_String_
  commentId: M:Chiaki.Enum`1.ParseOrNull(System.String)
  fullName: Chiaki.Enum<T>.ParseOrNull(System.String)
  fullName.vb: Chiaki.Enum(Of T).ParseOrNull(System.String)
  nameWithType: Enum<T>.ParseOrNull(String)
  nameWithType.vb: Enum(Of T).ParseOrNull(String)
- uid: Chiaki.Enum`1.ParseOrNull(System.String,System.Boolean)
  name: ParseOrNull(String, Boolean)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_ParseOrNull_System_String_System_Boolean_
  commentId: M:Chiaki.Enum`1.ParseOrNull(System.String,System.Boolean)
  fullName: Chiaki.Enum<T>.ParseOrNull(System.String, System.Boolean)
  fullName.vb: Chiaki.Enum(Of T).ParseOrNull(System.String, System.Boolean)
  nameWithType: Enum<T>.ParseOrNull(String, Boolean)
  nameWithType.vb: Enum(Of T).ParseOrNull(String, Boolean)
- uid: Chiaki.Enum`1.ParseOrNull*
  name: ParseOrNull
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_ParseOrNull_
  commentId: Overload:Chiaki.Enum`1.ParseOrNull
  isSpec: "True"
  fullName: Chiaki.Enum<T>.ParseOrNull
  fullName.vb: Chiaki.Enum(Of T).ParseOrNull
  nameWithType: Enum<T>.ParseOrNull
  nameWithType.vb: Enum(Of T).ParseOrNull
- uid: Chiaki.Enum`1.SetFlags(System.Collections.Generic.IEnumerable{`0})
  name: SetFlags(IEnumerable<T>)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_SetFlags_System_Collections_Generic_IEnumerable__0__
  commentId: M:Chiaki.Enum`1.SetFlags(System.Collections.Generic.IEnumerable{`0})
  name.vb: SetFlags(IEnumerable(Of T))
  fullName: Chiaki.Enum<T>.SetFlags(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Chiaki.Enum(Of T).SetFlags(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Enum<T>.SetFlags(IEnumerable<T>)
  nameWithType.vb: Enum(Of T).SetFlags(IEnumerable(Of T))
- uid: Chiaki.Enum`1.SetFlags*
  name: SetFlags
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_SetFlags_
  commentId: Overload:Chiaki.Enum`1.SetFlags
  isSpec: "True"
  fullName: Chiaki.Enum<T>.SetFlags
  fullName.vb: Chiaki.Enum(Of T).SetFlags
  nameWithType: Enum<T>.SetFlags
  nameWithType.vb: Enum(Of T).SetFlags
- uid: Chiaki.Enum`1.TryParse(System.String,`0@)
  name: TryParse(String, out T)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_TryParse_System_String__0__
  commentId: M:Chiaki.Enum`1.TryParse(System.String,`0@)
  name.vb: TryParse(String, ByRef T)
  fullName: Chiaki.Enum<T>.TryParse(System.String, out T)
  fullName.vb: Chiaki.Enum(Of T).TryParse(System.String, ByRef T)
  nameWithType: Enum<T>.TryParse(String, out T)
  nameWithType.vb: Enum(Of T).TryParse(String, ByRef T)
- uid: Chiaki.Enum`1.TryParse(System.String,System.Boolean,`0@)
  name: TryParse(String, Boolean, out T)
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_TryParse_System_String_System_Boolean__0__
  commentId: M:Chiaki.Enum`1.TryParse(System.String,System.Boolean,`0@)
  name.vb: TryParse(String, Boolean, ByRef T)
  fullName: Chiaki.Enum<T>.TryParse(System.String, System.Boolean, out T)
  fullName.vb: Chiaki.Enum(Of T).TryParse(System.String, System.Boolean, ByRef T)
  nameWithType: Enum<T>.TryParse(String, Boolean, out T)
  nameWithType.vb: Enum(Of T).TryParse(String, Boolean, ByRef T)
- uid: Chiaki.Enum`1.TryParse*
  name: TryParse
  href: api/Chiaki.Enum-1.html#Chiaki_Enum_1_TryParse_
  commentId: Overload:Chiaki.Enum`1.TryParse
  isSpec: "True"
  fullName: Chiaki.Enum<T>.TryParse
  fullName.vb: Chiaki.Enum(Of T).TryParse
  nameWithType: Enum<T>.TryParse
  nameWithType.vb: Enum(Of T).TryParse
- uid: Chiaki.EnumerableExtensions
  name: EnumerableExtensions
  href: api/Chiaki.EnumerableExtensions.html
  commentId: T:Chiaki.EnumerableExtensions
  fullName: Chiaki.EnumerableExtensions
  nameWithType: EnumerableExtensions
- uid: Chiaki.EnumerableExtensions.AsArray*
  name: AsArray
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_AsArray_
  commentId: Overload:Chiaki.EnumerableExtensions.AsArray
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.AsArray
  nameWithType: EnumerableExtensions.AsArray
- uid: Chiaki.EnumerableExtensions.AsArray``1(``0)
  name: AsArray<T>(T)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_AsArray__1___0_
  commentId: M:Chiaki.EnumerableExtensions.AsArray``1(``0)
  name.vb: AsArray(Of T)(T)
  fullName: Chiaki.EnumerableExtensions.AsArray<T>(T)
  fullName.vb: Chiaki.EnumerableExtensions.AsArray(Of T)(T)
  nameWithType: EnumerableExtensions.AsArray<T>(T)
  nameWithType.vb: EnumerableExtensions.AsArray(Of T)(T)
- uid: Chiaki.EnumerableExtensions.AsList*
  name: AsList
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_AsList_
  commentId: Overload:Chiaki.EnumerableExtensions.AsList
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.AsList
  nameWithType: EnumerableExtensions.AsList
- uid: Chiaki.EnumerableExtensions.AsList``1(``0)
  name: AsList<T>(T)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_AsList__1___0_
  commentId: M:Chiaki.EnumerableExtensions.AsList``1(``0)
  name.vb: AsList(Of T)(T)
  fullName: Chiaki.EnumerableExtensions.AsList<T>(T)
  fullName.vb: Chiaki.EnumerableExtensions.AsList(Of T)(T)
  nameWithType: EnumerableExtensions.AsList<T>(T)
  nameWithType.vb: EnumerableExtensions.AsList(Of T)(T)
- uid: Chiaki.EnumerableExtensions.ContainsAll*
  name: ContainsAll
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_ContainsAll_
  commentId: Overload:Chiaki.EnumerableExtensions.ContainsAll
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.ContainsAll
  nameWithType: EnumerableExtensions.ContainsAll
- uid: Chiaki.EnumerableExtensions.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: ContainsAll<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_ContainsAll__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Chiaki.EnumerableExtensions.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: ContainsAll(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: Chiaki.EnumerableExtensions.ContainsAll<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: Chiaki.EnumerableExtensions.ContainsAll(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: EnumerableExtensions.ContainsAll<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: EnumerableExtensions.ContainsAll(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: Chiaki.EnumerableExtensions.ContainsAny*
  name: ContainsAny
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_ContainsAny_
  commentId: Overload:Chiaki.EnumerableExtensions.ContainsAny
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.ContainsAny
  nameWithType: EnumerableExtensions.ContainsAny
- uid: Chiaki.EnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: ContainsAny<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_ContainsAny__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Chiaki.EnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: ContainsAny(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: Chiaki.EnumerableExtensions.ContainsAny<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: Chiaki.EnumerableExtensions.ContainsAny(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: EnumerableExtensions.ContainsAny<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: EnumerableExtensions.ContainsAny(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: Chiaki.EnumerableExtensions.DistinctBy*
  name: DistinctBy
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_DistinctBy_
  commentId: Overload:Chiaki.EnumerableExtensions.DistinctBy
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.DistinctBy
  nameWithType: EnumerableExtensions.DistinctBy
- uid: Chiaki.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: DistinctBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_DistinctBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  commentId: M:Chiaki.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name.vb: DistinctBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName: Chiaki.EnumerableExtensions.DistinctBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullName.vb: Chiaki.EnumerableExtensions.DistinctBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  nameWithType: EnumerableExtensions.DistinctBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: EnumerableExtensions.DistinctBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
- uid: Chiaki.EnumerableExtensions.IfNullThenEmpty*
  name: IfNullThenEmpty
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_IfNullThenEmpty_
  commentId: Overload:Chiaki.EnumerableExtensions.IfNullThenEmpty
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.IfNullThenEmpty
  nameWithType: EnumerableExtensions.IfNullThenEmpty
- uid: Chiaki.EnumerableExtensions.IfNullThenEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: IfNullThenEmpty<T>(IEnumerable<T>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_IfNullThenEmpty__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Chiaki.EnumerableExtensions.IfNullThenEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: IfNullThenEmpty(Of T)(IEnumerable(Of T))
  fullName: Chiaki.EnumerableExtensions.IfNullThenEmpty<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Chiaki.EnumerableExtensions.IfNullThenEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: EnumerableExtensions.IfNullThenEmpty<T>(IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.IfNullThenEmpty(Of T)(IEnumerable(Of T))
- uid: Chiaki.EnumerableExtensions.OrderByRandom*
  name: OrderByRandom
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_OrderByRandom_
  commentId: Overload:Chiaki.EnumerableExtensions.OrderByRandom
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.OrderByRandom
  nameWithType: EnumerableExtensions.OrderByRandom
- uid: Chiaki.EnumerableExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0})
  name: OrderByRandom<T>(IEnumerable<T>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_OrderByRandom__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Chiaki.EnumerableExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: OrderByRandom(Of T)(IEnumerable(Of T))
  fullName: Chiaki.EnumerableExtensions.OrderByRandom<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Chiaki.EnumerableExtensions.OrderByRandom(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: EnumerableExtensions.OrderByRandom<T>(IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.OrderByRandom(Of T)(IEnumerable(Of T))
- uid: Chiaki.EnumerableExtensions.RemoveAll*
  name: RemoveAll
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_RemoveAll_
  commentId: Overload:Chiaki.EnumerableExtensions.RemoveAll
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.RemoveAll
  nameWithType: EnumerableExtensions.RemoveAll
- uid: Chiaki.EnumerableExtensions.RemoveAll``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})
  name: RemoveAll<T>(ICollection<T>, Func<T, Boolean>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_RemoveAll__1_System_Collections_Generic_ICollection___0__System_Func___0_System_Boolean__
  commentId: M:Chiaki.EnumerableExtensions.RemoveAll``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})
  name.vb: RemoveAll(Of T)(ICollection(Of T), Func(Of T, Boolean))
  fullName: Chiaki.EnumerableExtensions.RemoveAll<T>(System.Collections.Generic.ICollection<T>, System.Func<T, System.Boolean>)
  fullName.vb: Chiaki.EnumerableExtensions.RemoveAll(Of T)(System.Collections.Generic.ICollection(Of T), System.Func(Of T, System.Boolean))
  nameWithType: EnumerableExtensions.RemoveAll<T>(ICollection<T>, Func<T, Boolean>)
  nameWithType.vb: EnumerableExtensions.RemoveAll(Of T)(ICollection(Of T), Func(Of T, Boolean))
- uid: Chiaki.EnumerableExtensions.RemoveAll``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})
  name: RemoveAll<T>(IList<T>, Func<T, Boolean>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_RemoveAll__1_System_Collections_Generic_IList___0__System_Func___0_System_Boolean__
  commentId: M:Chiaki.EnumerableExtensions.RemoveAll``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})
  name.vb: RemoveAll(Of T)(IList(Of T), Func(Of T, Boolean))
  fullName: Chiaki.EnumerableExtensions.RemoveAll<T>(System.Collections.Generic.IList<T>, System.Func<T, System.Boolean>)
  fullName.vb: Chiaki.EnumerableExtensions.RemoveAll(Of T)(System.Collections.Generic.IList(Of T), System.Func(Of T, System.Boolean))
  nameWithType: EnumerableExtensions.RemoveAll<T>(IList<T>, Func<T, Boolean>)
  nameWithType.vb: EnumerableExtensions.RemoveAll(Of T)(IList(Of T), Func(Of T, Boolean))
- uid: Chiaki.EnumerableExtensions.WhereIf*
  name: WhereIf
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_WhereIf_
  commentId: Overload:Chiaki.EnumerableExtensions.WhereIf
  isSpec: "True"
  fullName: Chiaki.EnumerableExtensions.WhereIf
  nameWithType: EnumerableExtensions.WhereIf
- uid: Chiaki.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})
  name: WhereIf<TSource>(IEnumerable<TSource>, Boolean, Func<TSource, Boolean>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_WhereIf__1_System_Collections_Generic_IEnumerable___0__System_Boolean_System_Func___0_System_Boolean__
  commentId: M:Chiaki.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})
  name.vb: WhereIf(Of TSource)(IEnumerable(Of TSource), Boolean, Func(Of TSource, Boolean))
  fullName: Chiaki.EnumerableExtensions.WhereIf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Boolean, System.Func<TSource, System.Boolean>)
  fullName.vb: Chiaki.EnumerableExtensions.WhereIf(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Boolean, System.Func(Of TSource, System.Boolean))
  nameWithType: EnumerableExtensions.WhereIf<TSource>(IEnumerable<TSource>, Boolean, Func<TSource, Boolean>)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of TSource)(IEnumerable(Of TSource), Boolean, Func(Of TSource, Boolean))
- uid: Chiaki.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean})
  name: WhereIf<TSource>(IEnumerable<TSource>, Boolean, Func<TSource, Int32, Boolean>)
  href: api/Chiaki.EnumerableExtensions.html#Chiaki_EnumerableExtensions_WhereIf__1_System_Collections_Generic_IEnumerable___0__System_Boolean_System_Func___0_System_Int32_System_Boolean__
  commentId: M:Chiaki.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean})
  name.vb: WhereIf(Of TSource)(IEnumerable(Of TSource), Boolean, Func(Of TSource, Int32, Boolean))
  fullName: Chiaki.EnumerableExtensions.WhereIf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Boolean, System.Func<TSource, System.Int32, System.Boolean>)
  fullName.vb: Chiaki.EnumerableExtensions.WhereIf(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Boolean, System.Func(Of TSource, System.Int32, System.Boolean))
  nameWithType: EnumerableExtensions.WhereIf<TSource>(IEnumerable<TSource>, Boolean, Func<TSource, Int32, Boolean>)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of TSource)(IEnumerable(Of TSource), Boolean, Func(Of TSource, Int32, Boolean))
- uid: Chiaki.ObjectExtensions
  name: ObjectExtensions
  href: api/Chiaki.ObjectExtensions.html
  commentId: T:Chiaki.ObjectExtensions
  fullName: Chiaki.ObjectExtensions
  nameWithType: ObjectExtensions
- uid: Chiaki.ObjectExtensions.DeepClone*
  name: DeepClone
  href: api/Chiaki.ObjectExtensions.html#Chiaki_ObjectExtensions_DeepClone_
  commentId: Overload:Chiaki.ObjectExtensions.DeepClone
  isSpec: "True"
  fullName: Chiaki.ObjectExtensions.DeepClone
  nameWithType: ObjectExtensions.DeepClone
- uid: Chiaki.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  href: api/Chiaki.ObjectExtensions.html#Chiaki_ObjectExtensions_DeepClone__1___0_
  commentId: M:Chiaki.ObjectExtensions.DeepClone``1(``0)
  name.vb: DeepClone(Of T)(T)
  fullName: Chiaki.ObjectExtensions.DeepClone<T>(T)
  fullName.vb: Chiaki.ObjectExtensions.DeepClone(Of T)(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
- uid: Chiaki.PerformanceTimer
  name: PerformanceTimer
  href: api/Chiaki.PerformanceTimer.html
  commentId: T:Chiaki.PerformanceTimer
  fullName: Chiaki.PerformanceTimer
  nameWithType: PerformanceTimer
- uid: Chiaki.PerformanceTimer.#ctor(System.String)
  name: PerformanceTimer(String)
  href: api/Chiaki.PerformanceTimer.html#Chiaki_PerformanceTimer__ctor_System_String_
  commentId: M:Chiaki.PerformanceTimer.#ctor(System.String)
  fullName: Chiaki.PerformanceTimer.PerformanceTimer(System.String)
  nameWithType: PerformanceTimer.PerformanceTimer(String)
- uid: Chiaki.PerformanceTimer.#ctor*
  name: PerformanceTimer
  href: api/Chiaki.PerformanceTimer.html#Chiaki_PerformanceTimer__ctor_
  commentId: Overload:Chiaki.PerformanceTimer.#ctor
  isSpec: "True"
  fullName: Chiaki.PerformanceTimer.PerformanceTimer
  nameWithType: PerformanceTimer.PerformanceTimer
- uid: Chiaki.PerformanceTimer.Dispose
  name: Dispose()
  href: api/Chiaki.PerformanceTimer.html#Chiaki_PerformanceTimer_Dispose
  commentId: M:Chiaki.PerformanceTimer.Dispose
  fullName: Chiaki.PerformanceTimer.Dispose()
  nameWithType: PerformanceTimer.Dispose()
- uid: Chiaki.PerformanceTimer.Dispose*
  name: Dispose
  href: api/Chiaki.PerformanceTimer.html#Chiaki_PerformanceTimer_Dispose_
  commentId: Overload:Chiaki.PerformanceTimer.Dispose
  isSpec: "True"
  fullName: Chiaki.PerformanceTimer.Dispose
  nameWithType: PerformanceTimer.Dispose
- uid: Chiaki.RandomExtensions
  name: RandomExtensions
  href: api/Chiaki.RandomExtensions.html
  commentId: T:Chiaki.RandomExtensions
  fullName: Chiaki.RandomExtensions
  nameWithType: RandomExtensions
- uid: Chiaki.RandomExtensions.NextDouble(System.Random,System.Double,System.Double)
  name: NextDouble(Random, Double, Double)
  href: api/Chiaki.RandomExtensions.html#Chiaki_RandomExtensions_NextDouble_System_Random_System_Double_System_Double_
  commentId: M:Chiaki.RandomExtensions.NextDouble(System.Random,System.Double,System.Double)
  fullName: Chiaki.RandomExtensions.NextDouble(System.Random, System.Double, System.Double)
  nameWithType: RandomExtensions.NextDouble(Random, Double, Double)
- uid: Chiaki.RandomExtensions.NextDouble*
  name: NextDouble
  href: api/Chiaki.RandomExtensions.html#Chiaki_RandomExtensions_NextDouble_
  commentId: Overload:Chiaki.RandomExtensions.NextDouble
  isSpec: "True"
  fullName: Chiaki.RandomExtensions.NextDouble
  nameWithType: RandomExtensions.NextDouble
- uid: Chiaki.RandomExtensions.NextFloat(System.Random,System.Single,System.Single)
  name: NextFloat(Random, Single, Single)
  href: api/Chiaki.RandomExtensions.html#Chiaki_RandomExtensions_NextFloat_System_Random_System_Single_System_Single_
  commentId: M:Chiaki.RandomExtensions.NextFloat(System.Random,System.Single,System.Single)
  fullName: Chiaki.RandomExtensions.NextFloat(System.Random, System.Single, System.Single)
  nameWithType: RandomExtensions.NextFloat(Random, Single, Single)
- uid: Chiaki.RandomExtensions.NextFloat*
  name: NextFloat
  href: api/Chiaki.RandomExtensions.html#Chiaki_RandomExtensions_NextFloat_
  commentId: Overload:Chiaki.RandomExtensions.NextFloat
  isSpec: "True"
  fullName: Chiaki.RandomExtensions.NextFloat
  nameWithType: RandomExtensions.NextFloat
- uid: Chiaki.Singleton`1
  name: Singleton<T>
  href: api/Chiaki.Singleton-1.html
  commentId: T:Chiaki.Singleton`1
  name.vb: Singleton(Of T)
  fullName: Chiaki.Singleton<T>
  fullName.vb: Chiaki.Singleton(Of T)
  nameWithType: Singleton<T>
  nameWithType.vb: Singleton(Of T)
- uid: Chiaki.Singleton`1.Instance
  name: Instance
  href: api/Chiaki.Singleton-1.html#Chiaki_Singleton_1_Instance
  commentId: P:Chiaki.Singleton`1.Instance
  fullName: Chiaki.Singleton<T>.Instance
  fullName.vb: Chiaki.Singleton(Of T).Instance
  nameWithType: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
- uid: Chiaki.Singleton`1.Instance*
  name: Instance
  href: api/Chiaki.Singleton-1.html#Chiaki_Singleton_1_Instance_
  commentId: Overload:Chiaki.Singleton`1.Instance
  isSpec: "True"
  fullName: Chiaki.Singleton<T>.Instance
  fullName.vb: Chiaki.Singleton(Of T).Instance
  nameWithType: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
- uid: Chiaki.StreamExtensions
  name: StreamExtensions
  href: api/Chiaki.StreamExtensions.html
  commentId: T:Chiaki.StreamExtensions
  fullName: Chiaki.StreamExtensions
  nameWithType: StreamExtensions
- uid: Chiaki.StreamExtensions.ReadToByteArray(System.IO.Stream)
  name: ReadToByteArray(Stream)
  href: api/Chiaki.StreamExtensions.html#Chiaki_StreamExtensions_ReadToByteArray_System_IO_Stream_
  commentId: M:Chiaki.StreamExtensions.ReadToByteArray(System.IO.Stream)
  fullName: Chiaki.StreamExtensions.ReadToByteArray(System.IO.Stream)
  nameWithType: StreamExtensions.ReadToByteArray(Stream)
- uid: Chiaki.StreamExtensions.ReadToByteArray*
  name: ReadToByteArray
  href: api/Chiaki.StreamExtensions.html#Chiaki_StreamExtensions_ReadToByteArray_
  commentId: Overload:Chiaki.StreamExtensions.ReadToByteArray
  isSpec: "True"
  fullName: Chiaki.StreamExtensions.ReadToByteArray
  nameWithType: StreamExtensions.ReadToByteArray
- uid: Chiaki.StringExtensions
  name: StringExtensions
  href: api/Chiaki.StringExtensions.html
  commentId: T:Chiaki.StringExtensions
  fullName: Chiaki.StringExtensions
  nameWithType: StringExtensions
- uid: Chiaki.StringExtensions.AppendIfNeeded(System.String,System.Char)
  name: AppendIfNeeded(String, Char)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_AppendIfNeeded_System_String_System_Char_
  commentId: M:Chiaki.StringExtensions.AppendIfNeeded(System.String,System.Char)
  fullName: Chiaki.StringExtensions.AppendIfNeeded(System.String, System.Char)
  nameWithType: StringExtensions.AppendIfNeeded(String, Char)
- uid: Chiaki.StringExtensions.AppendIfNeeded(System.String,System.String)
  name: AppendIfNeeded(String, String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_AppendIfNeeded_System_String_System_String_
  commentId: M:Chiaki.StringExtensions.AppendIfNeeded(System.String,System.String)
  fullName: Chiaki.StringExtensions.AppendIfNeeded(System.String, System.String)
  nameWithType: StringExtensions.AppendIfNeeded(String, String)
- uid: Chiaki.StringExtensions.AppendIfNeeded*
  name: AppendIfNeeded
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_AppendIfNeeded_
  commentId: Overload:Chiaki.StringExtensions.AppendIfNeeded
  isSpec: "True"
  fullName: Chiaki.StringExtensions.AppendIfNeeded
  nameWithType: StringExtensions.AppendIfNeeded
- uid: Chiaki.StringExtensions.ConvertNewLinesToHtmlTags(System.String)
  name: ConvertNewLinesToHtmlTags(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_ConvertNewLinesToHtmlTags_System_String_
  commentId: M:Chiaki.StringExtensions.ConvertNewLinesToHtmlTags(System.String)
  fullName: Chiaki.StringExtensions.ConvertNewLinesToHtmlTags(System.String)
  nameWithType: StringExtensions.ConvertNewLinesToHtmlTags(String)
- uid: Chiaki.StringExtensions.ConvertNewLinesToHtmlTags*
  name: ConvertNewLinesToHtmlTags
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_ConvertNewLinesToHtmlTags_
  commentId: Overload:Chiaki.StringExtensions.ConvertNewLinesToHtmlTags
  isSpec: "True"
  fullName: Chiaki.StringExtensions.ConvertNewLinesToHtmlTags
  nameWithType: StringExtensions.ConvertNewLinesToHtmlTags
- uid: Chiaki.StringExtensions.Formatted(System.String,System.Object)
  name: Formatted(String, Object)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Formatted_System_String_System_Object_
  commentId: M:Chiaki.StringExtensions.Formatted(System.String,System.Object)
  fullName: Chiaki.StringExtensions.Formatted(System.String, System.Object)
  nameWithType: StringExtensions.Formatted(String, Object)
- uid: Chiaki.StringExtensions.Formatted(System.String,System.Object[])
  name: Formatted(String, Object[])
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Formatted_System_String_System_Object___
  commentId: M:Chiaki.StringExtensions.Formatted(System.String,System.Object[])
  name.vb: Formatted(String, Object())
  fullName: Chiaki.StringExtensions.Formatted(System.String, System.Object[])
  fullName.vb: Chiaki.StringExtensions.Formatted(System.String, System.Object())
  nameWithType: StringExtensions.Formatted(String, Object[])
  nameWithType.vb: StringExtensions.Formatted(String, Object())
- uid: Chiaki.StringExtensions.Formatted*
  name: Formatted
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Formatted_
  commentId: Overload:Chiaki.StringExtensions.Formatted
  isSpec: "True"
  fullName: Chiaki.StringExtensions.Formatted
  nameWithType: StringExtensions.Formatted
- uid: Chiaki.StringExtensions.FromHexadecimal(System.String)
  name: FromHexadecimal(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_FromHexadecimal_System_String_
  commentId: M:Chiaki.StringExtensions.FromHexadecimal(System.String)
  fullName: Chiaki.StringExtensions.FromHexadecimal(System.String)
  nameWithType: StringExtensions.FromHexadecimal(String)
- uid: Chiaki.StringExtensions.FromHexadecimal*
  name: FromHexadecimal
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_FromHexadecimal_
  commentId: Overload:Chiaki.StringExtensions.FromHexadecimal
  isSpec: "True"
  fullName: Chiaki.StringExtensions.FromHexadecimal
  nameWithType: StringExtensions.FromHexadecimal
- uid: Chiaki.StringExtensions.GetBytes(System.String)
  name: GetBytes(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_GetBytes_System_String_
  commentId: M:Chiaki.StringExtensions.GetBytes(System.String)
  fullName: Chiaki.StringExtensions.GetBytes(System.String)
  nameWithType: StringExtensions.GetBytes(String)
- uid: Chiaki.StringExtensions.GetBytes*
  name: GetBytes
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_GetBytes_
  commentId: Overload:Chiaki.StringExtensions.GetBytes
  isSpec: "True"
  fullName: Chiaki.StringExtensions.GetBytes
  nameWithType: StringExtensions.GetBytes
- uid: Chiaki.StringExtensions.IsLengthAtLeast(System.String,System.Int32)
  name: IsLengthAtLeast(String, Int32)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_IsLengthAtLeast_System_String_System_Int32_
  commentId: M:Chiaki.StringExtensions.IsLengthAtLeast(System.String,System.Int32)
  fullName: Chiaki.StringExtensions.IsLengthAtLeast(System.String, System.Int32)
  nameWithType: StringExtensions.IsLengthAtLeast(String, Int32)
- uid: Chiaki.StringExtensions.IsLengthAtLeast*
  name: IsLengthAtLeast
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_IsLengthAtLeast_
  commentId: Overload:Chiaki.StringExtensions.IsLengthAtLeast
  isSpec: "True"
  fullName: Chiaki.StringExtensions.IsLengthAtLeast
  nameWithType: StringExtensions.IsLengthAtLeast
- uid: Chiaki.StringExtensions.IsNumeric(System.String)
  name: IsNumeric(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_IsNumeric_System_String_
  commentId: M:Chiaki.StringExtensions.IsNumeric(System.String)
  fullName: Chiaki.StringExtensions.IsNumeric(System.String)
  nameWithType: StringExtensions.IsNumeric(String)
- uid: Chiaki.StringExtensions.IsNumeric*
  name: IsNumeric
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_IsNumeric_
  commentId: Overload:Chiaki.StringExtensions.IsNumeric
  isSpec: "True"
  fullName: Chiaki.StringExtensions.IsNumeric
  nameWithType: StringExtensions.IsNumeric
- uid: Chiaki.StringExtensions.Mask(System.String)
  name: Mask(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_System_String_
  commentId: M:Chiaki.StringExtensions.Mask(System.String)
  fullName: Chiaki.StringExtensions.Mask(System.String)
  nameWithType: StringExtensions.Mask(String)
- uid: Chiaki.StringExtensions.Mask(System.String,Chiaki.StringMaskStyle)
  name: Mask(String, StringMaskStyle)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_System_String_Chiaki_StringMaskStyle_
  commentId: M:Chiaki.StringExtensions.Mask(System.String,Chiaki.StringMaskStyle)
  fullName: Chiaki.StringExtensions.Mask(System.String, Chiaki.StringMaskStyle)
  nameWithType: StringExtensions.Mask(String, StringMaskStyle)
- uid: Chiaki.StringExtensions.Mask(System.String,System.Char)
  name: Mask(String, Char)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_System_String_System_Char_
  commentId: M:Chiaki.StringExtensions.Mask(System.String,System.Char)
  fullName: Chiaki.StringExtensions.Mask(System.String, System.Char)
  nameWithType: StringExtensions.Mask(String, Char)
- uid: Chiaki.StringExtensions.Mask(System.String,System.Char,Chiaki.StringMaskStyle)
  name: Mask(String, Char, StringMaskStyle)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_System_String_System_Char_Chiaki_StringMaskStyle_
  commentId: M:Chiaki.StringExtensions.Mask(System.String,System.Char,Chiaki.StringMaskStyle)
  fullName: Chiaki.StringExtensions.Mask(System.String, System.Char, Chiaki.StringMaskStyle)
  nameWithType: StringExtensions.Mask(String, Char, StringMaskStyle)
- uid: Chiaki.StringExtensions.Mask(System.String,System.Char,System.Int32)
  name: Mask(String, Char, Int32)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_System_String_System_Char_System_Int32_
  commentId: M:Chiaki.StringExtensions.Mask(System.String,System.Char,System.Int32)
  fullName: Chiaki.StringExtensions.Mask(System.String, System.Char, System.Int32)
  nameWithType: StringExtensions.Mask(String, Char, Int32)
- uid: Chiaki.StringExtensions.Mask(System.String,System.Char,System.Int32,Chiaki.StringMaskStyle)
  name: Mask(String, Char, Int32, StringMaskStyle)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_System_String_System_Char_System_Int32_Chiaki_StringMaskStyle_
  commentId: M:Chiaki.StringExtensions.Mask(System.String,System.Char,System.Int32,Chiaki.StringMaskStyle)
  fullName: Chiaki.StringExtensions.Mask(System.String, System.Char, System.Int32, Chiaki.StringMaskStyle)
  nameWithType: StringExtensions.Mask(String, Char, Int32, StringMaskStyle)
- uid: Chiaki.StringExtensions.Mask(System.String,System.Int32)
  name: Mask(String, Int32)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_System_String_System_Int32_
  commentId: M:Chiaki.StringExtensions.Mask(System.String,System.Int32)
  fullName: Chiaki.StringExtensions.Mask(System.String, System.Int32)
  nameWithType: StringExtensions.Mask(String, Int32)
- uid: Chiaki.StringExtensions.Mask(System.String,System.Int32,Chiaki.StringMaskStyle)
  name: Mask(String, Int32, StringMaskStyle)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_System_String_System_Int32_Chiaki_StringMaskStyle_
  commentId: M:Chiaki.StringExtensions.Mask(System.String,System.Int32,Chiaki.StringMaskStyle)
  fullName: Chiaki.StringExtensions.Mask(System.String, System.Int32, Chiaki.StringMaskStyle)
  nameWithType: StringExtensions.Mask(String, Int32, StringMaskStyle)
- uid: Chiaki.StringExtensions.Mask*
  name: Mask
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_Mask_
  commentId: Overload:Chiaki.StringExtensions.Mask
  isSpec: "True"
  fullName: Chiaki.StringExtensions.Mask
  nameWithType: StringExtensions.Mask
- uid: Chiaki.StringExtensions.PrependIfNeeded(System.String,System.Char)
  name: PrependIfNeeded(String, Char)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_PrependIfNeeded_System_String_System_Char_
  commentId: M:Chiaki.StringExtensions.PrependIfNeeded(System.String,System.Char)
  fullName: Chiaki.StringExtensions.PrependIfNeeded(System.String, System.Char)
  nameWithType: StringExtensions.PrependIfNeeded(String, Char)
- uid: Chiaki.StringExtensions.PrependIfNeeded(System.String,System.String)
  name: PrependIfNeeded(String, String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_PrependIfNeeded_System_String_System_String_
  commentId: M:Chiaki.StringExtensions.PrependIfNeeded(System.String,System.String)
  fullName: Chiaki.StringExtensions.PrependIfNeeded(System.String, System.String)
  nameWithType: StringExtensions.PrependIfNeeded(String, String)
- uid: Chiaki.StringExtensions.PrependIfNeeded*
  name: PrependIfNeeded
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_PrependIfNeeded_
  commentId: Overload:Chiaki.StringExtensions.PrependIfNeeded
  isSpec: "True"
  fullName: Chiaki.StringExtensions.PrependIfNeeded
  nameWithType: StringExtensions.PrependIfNeeded
- uid: Chiaki.StringExtensions.RemoveHtmlTags(System.String)
  name: RemoveHtmlTags(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_RemoveHtmlTags_System_String_
  commentId: M:Chiaki.StringExtensions.RemoveHtmlTags(System.String)
  fullName: Chiaki.StringExtensions.RemoveHtmlTags(System.String)
  nameWithType: StringExtensions.RemoveHtmlTags(String)
- uid: Chiaki.StringExtensions.RemoveHtmlTags*
  name: RemoveHtmlTags
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_RemoveHtmlTags_
  commentId: Overload:Chiaki.StringExtensions.RemoveHtmlTags
  isSpec: "True"
  fullName: Chiaki.StringExtensions.RemoveHtmlTags
  nameWithType: StringExtensions.RemoveHtmlTags
- uid: Chiaki.StringExtensions.RemoveNewLines(System.String)
  name: RemoveNewLines(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_RemoveNewLines_System_String_
  commentId: M:Chiaki.StringExtensions.RemoveNewLines(System.String)
  fullName: Chiaki.StringExtensions.RemoveNewLines(System.String)
  nameWithType: StringExtensions.RemoveNewLines(String)
- uid: Chiaki.StringExtensions.RemoveNewLines*
  name: RemoveNewLines
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_RemoveNewLines_
  commentId: Overload:Chiaki.StringExtensions.RemoveNewLines
  isSpec: "True"
  fullName: Chiaki.StringExtensions.RemoveNewLines
  nameWithType: StringExtensions.RemoveNewLines
- uid: Chiaki.StringExtensions.RemoveWhitespace(System.String)
  name: RemoveWhitespace(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_RemoveWhitespace_System_String_
  commentId: M:Chiaki.StringExtensions.RemoveWhitespace(System.String)
  fullName: Chiaki.StringExtensions.RemoveWhitespace(System.String)
  nameWithType: StringExtensions.RemoveWhitespace(String)
- uid: Chiaki.StringExtensions.RemoveWhitespace*
  name: RemoveWhitespace
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_RemoveWhitespace_
  commentId: Overload:Chiaki.StringExtensions.RemoveWhitespace
  isSpec: "True"
  fullName: Chiaki.StringExtensions.RemoveWhitespace
  nameWithType: StringExtensions.RemoveWhitespace
- uid: Chiaki.StringExtensions.ToHexadecimal(System.String)
  name: ToHexadecimal(String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_ToHexadecimal_System_String_
  commentId: M:Chiaki.StringExtensions.ToHexadecimal(System.String)
  fullName: Chiaki.StringExtensions.ToHexadecimal(System.String)
  nameWithType: StringExtensions.ToHexadecimal(String)
- uid: Chiaki.StringExtensions.ToHexadecimal*
  name: ToHexadecimal
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_ToHexadecimal_
  commentId: Overload:Chiaki.StringExtensions.ToHexadecimal
  isSpec: "True"
  fullName: Chiaki.StringExtensions.ToHexadecimal
  nameWithType: StringExtensions.ToHexadecimal
- uid: Chiaki.StringExtensions.TrimEnd(System.String,System.String)
  name: TrimEnd(String, String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_TrimEnd_System_String_System_String_
  commentId: M:Chiaki.StringExtensions.TrimEnd(System.String,System.String)
  fullName: Chiaki.StringExtensions.TrimEnd(System.String, System.String)
  nameWithType: StringExtensions.TrimEnd(String, String)
- uid: Chiaki.StringExtensions.TrimEnd*
  name: TrimEnd
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_TrimEnd_
  commentId: Overload:Chiaki.StringExtensions.TrimEnd
  isSpec: "True"
  fullName: Chiaki.StringExtensions.TrimEnd
  nameWithType: StringExtensions.TrimEnd
- uid: Chiaki.StringExtensions.TrimStart(System.String,System.String)
  name: TrimStart(String, String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_TrimStart_System_String_System_String_
  commentId: M:Chiaki.StringExtensions.TrimStart(System.String,System.String)
  fullName: Chiaki.StringExtensions.TrimStart(System.String, System.String)
  nameWithType: StringExtensions.TrimStart(String, String)
- uid: Chiaki.StringExtensions.TrimStart*
  name: TrimStart
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_TrimStart_
  commentId: Overload:Chiaki.StringExtensions.TrimStart
  isSpec: "True"
  fullName: Chiaki.StringExtensions.TrimStart
  nameWithType: StringExtensions.TrimStart
- uid: Chiaki.StringExtensions.TruncateTo(System.String,System.Int32,System.String)
  name: TruncateTo(String, Int32, String)
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_TruncateTo_System_String_System_Int32_System_String_
  commentId: M:Chiaki.StringExtensions.TruncateTo(System.String,System.Int32,System.String)
  fullName: Chiaki.StringExtensions.TruncateTo(System.String, System.Int32, System.String)
  nameWithType: StringExtensions.TruncateTo(String, Int32, String)
- uid: Chiaki.StringExtensions.TruncateTo*
  name: TruncateTo
  href: api/Chiaki.StringExtensions.html#Chiaki_StringExtensions_TruncateTo_
  commentId: Overload:Chiaki.StringExtensions.TruncateTo
  isSpec: "True"
  fullName: Chiaki.StringExtensions.TruncateTo
  nameWithType: StringExtensions.TruncateTo
- uid: Chiaki.StringMaskStyle
  name: StringMaskStyle
  href: api/Chiaki.StringMaskStyle.html
  commentId: T:Chiaki.StringMaskStyle
  fullName: Chiaki.StringMaskStyle
  nameWithType: StringMaskStyle
- uid: Chiaki.StringMaskStyle.All
  name: All
  href: api/Chiaki.StringMaskStyle.html#Chiaki_StringMaskStyle_All
  commentId: F:Chiaki.StringMaskStyle.All
  fullName: Chiaki.StringMaskStyle.All
  nameWithType: StringMaskStyle.All
- uid: Chiaki.StringMaskStyle.AlphaNumericOnly
  name: AlphaNumericOnly
  href: api/Chiaki.StringMaskStyle.html#Chiaki_StringMaskStyle_AlphaNumericOnly
  commentId: F:Chiaki.StringMaskStyle.AlphaNumericOnly
  fullName: Chiaki.StringMaskStyle.AlphaNumericOnly
  nameWithType: StringMaskStyle.AlphaNumericOnly
- uid: Chiaki.XmlSerializer
  name: XmlSerializer
  href: api/Chiaki.XmlSerializer.html
  commentId: T:Chiaki.XmlSerializer
  fullName: Chiaki.XmlSerializer
  nameWithType: XmlSerializer
- uid: Chiaki.XmlSerializer.Deserialize*
  name: Deserialize
  href: api/Chiaki.XmlSerializer.html#Chiaki_XmlSerializer_Deserialize_
  commentId: Overload:Chiaki.XmlSerializer.Deserialize
  isSpec: "True"
  fullName: Chiaki.XmlSerializer.Deserialize
  nameWithType: XmlSerializer.Deserialize
- uid: Chiaki.XmlSerializer.Deserialize``1(System.Byte[])
  name: Deserialize<T>(Byte[])
  href: api/Chiaki.XmlSerializer.html#Chiaki_XmlSerializer_Deserialize__1_System_Byte___
  commentId: M:Chiaki.XmlSerializer.Deserialize``1(System.Byte[])
  name.vb: Deserialize(Of T)(Byte())
  fullName: Chiaki.XmlSerializer.Deserialize<T>(System.Byte[])
  fullName.vb: Chiaki.XmlSerializer.Deserialize(Of T)(System.Byte())
  nameWithType: XmlSerializer.Deserialize<T>(Byte[])
  nameWithType.vb: XmlSerializer.Deserialize(Of T)(Byte())
- uid: Chiaki.XmlSerializer.Deserialize``1(System.Byte[],System.Runtime.Serialization.DataContractSerializer)
  name: Deserialize<T>(Byte[], DataContractSerializer)
  href: api/Chiaki.XmlSerializer.html#Chiaki_XmlSerializer_Deserialize__1_System_Byte___System_Runtime_Serialization_DataContractSerializer_
  commentId: M:Chiaki.XmlSerializer.Deserialize``1(System.Byte[],System.Runtime.Serialization.DataContractSerializer)
  name.vb: Deserialize(Of T)(Byte(), DataContractSerializer)
  fullName: Chiaki.XmlSerializer.Deserialize<T>(System.Byte[], System.Runtime.Serialization.DataContractSerializer)
  fullName.vb: Chiaki.XmlSerializer.Deserialize(Of T)(System.Byte(), System.Runtime.Serialization.DataContractSerializer)
  nameWithType: XmlSerializer.Deserialize<T>(Byte[], DataContractSerializer)
  nameWithType.vb: XmlSerializer.Deserialize(Of T)(Byte(), DataContractSerializer)
- uid: Chiaki.XmlSerializer.Serialize*
  name: Serialize
  href: api/Chiaki.XmlSerializer.html#Chiaki_XmlSerializer_Serialize_
  commentId: Overload:Chiaki.XmlSerializer.Serialize
  isSpec: "True"
  fullName: Chiaki.XmlSerializer.Serialize
  nameWithType: XmlSerializer.Serialize
- uid: Chiaki.XmlSerializer.Serialize``1(``0)
  name: Serialize<T>(T)
  href: api/Chiaki.XmlSerializer.html#Chiaki_XmlSerializer_Serialize__1___0_
  commentId: M:Chiaki.XmlSerializer.Serialize``1(``0)
  name.vb: Serialize(Of T)(T)
  fullName: Chiaki.XmlSerializer.Serialize<T>(T)
  fullName.vb: Chiaki.XmlSerializer.Serialize(Of T)(T)
  nameWithType: XmlSerializer.Serialize<T>(T)
  nameWithType.vb: XmlSerializer.Serialize(Of T)(T)
- uid: Chiaki.XmlSerializer.Serialize``1(``0,System.Runtime.Serialization.DataContractSerializer)
  name: Serialize<T>(T, DataContractSerializer)
  href: api/Chiaki.XmlSerializer.html#Chiaki_XmlSerializer_Serialize__1___0_System_Runtime_Serialization_DataContractSerializer_
  commentId: M:Chiaki.XmlSerializer.Serialize``1(``0,System.Runtime.Serialization.DataContractSerializer)
  name.vb: Serialize(Of T)(T, DataContractSerializer)
  fullName: Chiaki.XmlSerializer.Serialize<T>(T, System.Runtime.Serialization.DataContractSerializer)
  fullName.vb: Chiaki.XmlSerializer.Serialize(Of T)(T, System.Runtime.Serialization.DataContractSerializer)
  nameWithType: XmlSerializer.Serialize<T>(T, DataContractSerializer)
  nameWithType.vb: XmlSerializer.Serialize(Of T)(T, DataContractSerializer)
